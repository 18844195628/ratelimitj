buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
//        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M3'
    }
}
//plugins {
//    id 'com.github.kt3k.coveralls' version '2.6.3'
//}

plugins {
    id 'com.gradle.build-scan' version '1.3'
}

apply plugin: 'io.codearte.nexus-staging'
//apply plugin: 'org.junit.platform.gradle.plugin'

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    apply plugin: 'maven'
    apply plugin: 'signing'

    checkstyle {
        configFile = rootProject.file('gradle/config/checkstyle/checkstyle.xml')
        toolVersion = '6.19'
    }

    jacocoTestReport {
        reports {
            xml.enabled = true // coveralls plugin depends on xml format report
            html.enabled = true
        }
    }

//    junitPlatform {
//        filters {
//            engines {
//                include 'junit-jupiter'
//            }
//            includeClassNamePatterns '.*Test', '.*Tests'
//        }
//    }

    repositories {
        mavenCentral()
    }

    sourceCompatibility = 1.8

    ext.libraries = [
            slf4j  : 'org.slf4j:slf4j-api:1.7.21',
            assertj: 'org.assertj:assertj-core:3.6.1',
            junit  : 'org.junit.jupiter:junit-jupiter-api:5.0.0-M3',
            mockito: 'org.mockito:mockito-core:2.2.28',
            guava  : 'com.google.guava:guava:20.0',
            logback: 'ch.qos.logback:logback-classic:1.1.7'
    ]

//    ext.junit4Version        = '4.12'
    ext.junitVintageVersion = '4.12.0-M3'
    ext.junitPlatformVersion = '1.0.0-M3'
    ext.junitJupiterVersion = '5.0.0-M3'
    ext.log4jVersion = '2.6.2'

}

subprojects {

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }
}


ext {
    // Credentials for publication repositories (needed only for publishing)
    // Should be set in ${HOME}/.gradle/gradle.properties
    ossrhUser = project.hasProperty('ossrhUser') ? project.property('ossrhUser') : ""
    osshrPassword = project.hasProperty('osshrPassword') ? project.property('osshrPassword') : ""
}

allprojects {
    apply plugin: 'signing'
    apply plugin: 'maven'

    project.group = 'es.moki.ratelimitj'
    project.version = '0.3.0'

    // Signature of artifacts
    signing {
        sign configurations.archives
    }

    // OSSRH publication
    if (ossrhUser != "") {
        uploadArchives {
            repositories {
                mavenDeployer {
                    // POM signature
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                    // Target repository
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUser, password: osshrPassword)
                    }
                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                        authentication(userName: ossrhUser, password: osshrPassword)
                    }

                    pom.project {
                        name 'es.moki.ratelimitj'
                        description 'The RateLimitJ project aims to provide a modular rate limiting solution'
                        packaging 'jar'
                        url 'https://github.com/mokies/ratelimitj'

                        scm {
                            connection 'scm:git:https://github.com/mokies/ratelimitj.git'
                            developerConnection 'scm:git:git@github.com:mokies/ratelimitj.git'
                            url 'https://github.com/mokies/ratelimitj.git'
                        }

                        licenses {
                            license {
                                name 'Apache License Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'mokies'
                                name = 'Craig Baker'
                            }
                        }
                    }
                }
            }
        }
        uploadArchives.dependsOn build
    }

    //    coveralls {
    //        sourceDirs = publishedProjects.sourceSets.main.allSource.srcDirs.flatten()
    //        jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
    //    }
    //
    //    tasks.coveralls {
    //        group = 'Coverage reports'
    //        description = 'Uploads the aggregated coverage report to Coveralls'
    //
    //        dependsOn jacocoRootReport
    //        onlyIf { System.env.'CI' }
    //    }


}
// http://nemerosa.ghost.io/2015/07/01/publishing-to-the-maven-central-using-gradle/
// ./gradlew uploadArchives closeAndPromoteRepository









